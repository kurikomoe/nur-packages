name: "Build and populate cache"

on:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [ build-all-event ]
  push:
    branches:
      - main
      - master

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_all:
    strategy:
      matrix:
        # Set this to notify the global nur package registry that changes are
        # available.
        #
        # The repo name as used in
        # https://github.com/nix-community/NUR/blob/master/repos.json
        nurRepo:
          - nur-packages
        # Set this to cache your build results in cachix for faster builds
        # in CI and for everyone who uses your cache.
        #
        # Format: Your cachix cache host name without the ".cachix.org" suffix.
        # Example: mycache (for mycache.cachix.org)
        #
        # For this to work, you also need to set the CACHIX_SIGNING_KEY or
        # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
        # Github found at
        # https://github.com/<your_githubname>/nur-packages/settings/secrets
        cachixName:
          - kurikomoe
        nixPath:
          - https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
          - https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz
          - https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-25.05.tar.gz

    runs-on: ubuntu-latest

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 16384
        swap-size-mb: 4096
        build-mount-path: '/nix'
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout repository
      uses: actions/checkout@v4

    # - name: Install nix
    #   uses: cachix/install-nix-action@v31
    #   with:
    #     nix_path: nixpkgs=${{ matrix.nixPath }}
    #     extra_nix_config: |
    #       experimental-features = nix-command flakes
    #       access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - uses: nixbuild/nix-quick-install-action@v30
    - name: Restore and save Nix store
      uses: nix-community/cache-nix-action@v6
      with:
        primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
        restore-prefixes-first-match: nix-${{ runner.os }}-
        gc-max-store-size-linux: 3G
        purge: true
        purge-prefixes: nix-${{ runner.os }}-
        purge-created: 0
        purge-last-accessed: 0
        purge-primary-key: never

    - run: |
        nix-channel --add ${{ matrix.nixPath }} nixpkgs
        nix-channel --update

    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

    - name: Setup cachix
      uses: cachix/cachix-action@v16
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Setup Attic cache
      uses: ryanccn/attic-action@v0
      continue-on-error: true
      with:
        endpoint: ${{ secrets.ATTIC_ENDPOINT }}
        cache: ${{ secrets.ATTIC_CACHE }}
        token: ${{ secrets.ATTIC_TOKEN }}

    - name: Update flake to system nixpkgs
      run: nix flake update --override-input nixpkgs ${{ matrix.nixPath }}

    - name: Build nix packages
      uses: nick-fields/retry@v3
      with:
        retry_on: timeout
        timeout_minutes: 60
        max_attempts: 3
        command: nix run -f '<nixpkgs>' nix-fast-build -- -f .#ci --no-nom --skip-cached --eval-max-memory-size 12288 --eval-workers 1 -j 1

    # - name: Trigger NUR update
    #   # Don't replace <YOUR_REPO_NAME> here!
    #   if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
    #   run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"

    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: ${{ failure() }}
      with:
        wait-timeout-minutes: 5
